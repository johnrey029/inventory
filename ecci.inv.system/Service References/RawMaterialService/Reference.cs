//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ecci.inv.system.RawMaterialService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RawMaterialService.RawMaterialsServiceSoap")]
    public interface RawMaterialsServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRawMaterials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetRawMaterials();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRawMaterials", ReplyAction="*")]
        System.Threading.Tasks.Task GetRawMaterialsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ShowDeliveredById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ShowDeliveredById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ShowDeliveredById", ReplyAction="*")]
        System.Threading.Tasks.Task ShowDeliveredByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDispatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateDispatch(int upid, int dq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDispatch", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateDispatchAsync(int upid, int dq);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RawMaterialsServiceSoapChannel : ecci.inv.system.RawMaterialService.RawMaterialsServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RawMaterialsServiceSoapClient : System.ServiceModel.ClientBase<ecci.inv.system.RawMaterialService.RawMaterialsServiceSoap>, ecci.inv.system.RawMaterialService.RawMaterialsServiceSoap {
        
        public RawMaterialsServiceSoapClient() {
        }
        
        public RawMaterialsServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RawMaterialsServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RawMaterialsServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RawMaterialsServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void GetRawMaterials() {
            base.Channel.GetRawMaterials();
        }
        
        public System.Threading.Tasks.Task GetRawMaterialsAsync() {
            return base.Channel.GetRawMaterialsAsync();
        }
        
        public void ShowDeliveredById(int id) {
            base.Channel.ShowDeliveredById(id);
        }
        
        public System.Threading.Tasks.Task ShowDeliveredByIdAsync(int id) {
            return base.Channel.ShowDeliveredByIdAsync(id);
        }
        
        public int UpdateDispatch(int upid, int dq) {
            return base.Channel.UpdateDispatch(upid, dq);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDispatchAsync(int upid, int dq) {
            return base.Channel.UpdateDispatchAsync(upid, dq);
        }
    }
}
